/*
	
	Following is the structure used to represent the Binary Tree Node

	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */

public class Solution {

	public static int height(BinaryTreeNode<Integer> root) {
		//Your code goes here
		// checking base condition or null pointer
		if (root == null) return 0;

		// taking height for left chield
		int leftChield = height(root.left);
		// taking height for right chield
		int rightChield = height(root.right);


		// taking max value between left and right child and by adding 1 for root count return main value
		return Math.max(leftChield, rightChield) + 1;
	}

}
